[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\n\n\n\n\n\nbikes_tbl      <- read_excel(\"../../ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"../../ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n\n#> New names:\n\nbikeshops_tbl  <- read_excel(\"../../ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n\n\n\n\nleft_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n\n\n  \n\n\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n\n\n\n\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  mutate(total.price = price * quantity) %>%\n  separate(col = location, into = c(\"city\", \"state\"), sep = \", \")\n\n\n\n\n\nsales_by_year_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(order.date, total.price, state) %>%\n  mutate(year = year(order.date)) %>%\n  \n  group_by(year, state) %>%\n  summarise(sales = sum(total.price)) %>%\n  ungroup() %>%\n  \n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n#> `summarise()` has grouped output by 'year'. You can override using the `.groups`\n#> argument.\n\n\n\n\n\n\nsales_by_year_state_tbl %>%\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  geom_col() +\n  facet_wrap(~ state) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by state and year\",\n    fill = \"State\" # Changes the legend name\n  ) +\n  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "library(ROpenWeatherMap)\nlibrary(tibble)\n\n\n\n\n\n\n\n\n\n\n\ncurrent_weather <- get_current_weather(API_KEY, city = \"Hamburg\")\n\n\n\n\n\nweather_data <- tibble(weather.type = current_weather$weather$main,\n                       weather.subtype = current_weather$weather$description,\n                       weather.temp = current_weather$main$temp,\n                       weather.feels_like = current_weather$main$feels_like,\n                       weather.temp_min = current_weather$main$temp_min,\n                       weather.temp_max = current_weather$main$temp_max,\n                       weather.pressure = current_weather$main$pressure,\n                       weather.humidity = current_weather$main$humidity,\n                       wind.speed = current_weather$wind$speed,\n                       wind.degree = current_weather$wind$deg)\n\n\n\n\n\nweather_data"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html#load-libraries-1",
    "href": "content/01_journal/02_data_acquisition.html#load-libraries-1",
    "title": "Data Acquisition",
    "section": "2.1 Load libraries",
    "text": "2.1 Load libraries\n\nlibrary(tidyverse)\n\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v purrr     1.0.1\n#> v forcats   1.0.0     v readr     2.1.4\n#> v ggplot2   3.4.2     v stringr   1.5.0\n#> v lubridate 1.9.2     v tidyr     1.3.0-- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(glue)\nlibrary(rvest)\n\n#> \n#> Attaching package: 'rvest'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     guess_encoding"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html#get-bike-category-links",
    "href": "content/01_journal/02_data_acquisition.html#get-bike-category-links",
    "title": "Data Acquisition",
    "section": "2.2 Get bike category links",
    "text": "2.2 Get bike category links\n\nurl_home <- \"https://www.rosebikes.de/fahrräder\"\nhtml_home <- read_html(url_home)\n\nbike_cats <- html_home %>%\n  html_nodes(css = \".catalog-navigation__link\")\n\nlinks <- sapply(bike_cats, function(x) {x %>% html_attr(\"href\")})\n\nlinks <- links[1:9] %>%\n  enframe(name = \"position\", value = \"subdirectory\") %>%\n  mutate(\n    url = glue(\"https://www.rosebikes.de{subdirectory}\"))  %>%\n  distinct(url)"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html#define-function-to-scrape-relevant-data-points",
    "href": "content/01_journal/02_data_acquisition.html#define-function-to-scrape-relevant-data-points",
    "title": "Data Acquisition",
    "section": "2.3 Define function to scrape relevant data points",
    "text": "2.3 Define function to scrape relevant data points\n\nget_data <- function(url) {\n  html_bike_cat <- read_html(url)\n  \n  listings <- html_nodes(html_bike_cat, css = '.catalog-category-bikes__price-title') %>% \n    html_text(trim=TRUE) %>%              \n    str_replace_all(\" \",\"\") %>%\n    str_replace_all(\"ab\", \"\") %>%\n    str_replace_all(\"€\", \"\") %>%\n    str_replace_all(\"\\n\", \"\") %>%\n    str_replace_all(\"\\\\.\", \"\") %>%\n    str_replace_all(\",\", \"\\\\.\") %>%\n    iconv('utf-8', 'ascii', sub='') %>%\n    as.numeric()\n  \n  names <- html_nodes(html_bike_cat, xpath = '//basic-headline/h4') %>% \n    html_text() %>%\n    str_replace_all(\"\\n\", \"\") %>%\n    str_to_title()\n  \n  categories <- rep(url %>% str_replace_all(\"https://www.rosebikes.de/fahrräder/\", \"\"), \n              each=length(names)) %>%\n    str_to_title()\n  \n  return(list(\"listings\" = listings, \"names\" = names, \"categories\" = categories))\n}"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html#create-table-from-relevant-data-points-1",
    "href": "content/01_journal/02_data_acquisition.html#create-table-from-relevant-data-points-1",
    "title": "Data Acquisition",
    "section": "2.4 Create table from relevant data points",
    "text": "2.4 Create table from relevant data points\n\ndata <- get_data(links$url[1])\n\nbike_data <- tibble(bike.type = data$categories,\n                    bike.name = data$names,\n                    bike.price = as.numeric(data$listings))\n\nfor (i in 2:9) {\n  data <- get_data(links$url[i])\n  \n  bike_data <- bike_data %>% add_row(bike.type = data$categories,\n                                     bike.name = data$names,\n                                     bike.price = as.numeric(data$listings))\n}"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html#display-table-1",
    "href": "content/01_journal/02_data_acquisition.html#display-table-1",
    "title": "Data Acquisition",
    "section": "2.5 Display table",
    "text": "2.5 Display table\n\nhead(bike_data, 10)"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html#welcome-to-my-journal",
    "href": "index.html#welcome-to-my-journal",
    "title": "My Lab Journal",
    "section": "Welcome to my journal!",
    "text": "Welcome to my journal!"
  }
]
{
  "hash": "f51b5d2ee76b721f2bdb681b553bdef7",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Philip Suskin\"\n---\n\n\n# Solution\n\n## Load libraries\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_2d8b33eb297603c5b4cc023fd69eda21'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v readr     2.1.4\n#> v forcats   1.0.0     v stringr   1.5.0\n#> v ggplot2   3.4.2     v tibble    3.2.1\n#> v lubridate 1.9.2     v tidyr     1.3.0\n#> v purrr     1.0.1     -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::between()         masks data.table::between()\n#> x readr::col_character()   masks vroom::col_character()\n#> x readr::col_date()        masks vroom::col_date()\n#> x readr::col_datetime()    masks vroom::col_datetime()\n#> x readr::col_double()      masks vroom::col_double()\n#> x readr::col_factor()      masks vroom::col_factor()\n#> x readr::col_guess()       masks vroom::col_guess()\n#> x readr::col_integer()     masks vroom::col_integer()\n#> x readr::col_logical()     masks vroom::col_logical()\n#> x readr::col_number()      masks vroom::col_number()\n#> x readr::col_skip()        masks vroom::col_skip()\n#> x readr::col_time()        masks vroom::col_time()\n#> x readr::cols()            masks vroom::cols()\n#> x readr::date_names_lang() masks vroom::date_names_lang()\n#> x readr::default_locale()  masks vroom::default_locale()\n#> x dplyr::filter()          masks stats::filter()\n#> x dplyr::first()           masks data.table::first()\n#> x readr::fwf_cols()        masks vroom::fwf_cols()\n#> x readr::fwf_empty()       masks vroom::fwf_empty()\n#> x readr::fwf_positions()   masks vroom::fwf_positions()\n#> x readr::fwf_widths()      masks vroom::fwf_widths()\n#> x lubridate::hour()        masks data.table::hour()\n#> x lubridate::isoweek()     masks data.table::isoweek()\n#> x dplyr::lag()             masks stats::lag()\n#> x dplyr::last()            masks data.table::last()\n#> x readr::locale()          masks vroom::locale()\n#> x lubridate::mday()        masks data.table::mday()\n#> x lubridate::minute()      masks data.table::minute()\n#> x lubridate::month()       masks data.table::month()\n#> x readr::output_column()   masks vroom::output_column()\n#> x readr::problems()        masks vroom::problems()\n#> x lubridate::quarter()     masks data.table::quarter()\n#> x lubridate::second()      masks data.table::second()\n#> x purrr::transpose()       masks data.table::transpose()\n#> x lubridate::wday()        masks data.table::wday()\n#> x lubridate::week()        masks data.table::week()\n#> x lubridate::yday()        masks data.table::yday()\n#> x lubridate::year()        masks data.table::year()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(vroom)\nlibrary(data.table)\n```\n:::\n\n\n## Set column types\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-4_f917fdc8872fe5fef8d3c6d71b4016c8'}\n\n```{.r .cell-code}\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n```\n:::\n\n\n## Load tables\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-6_440662d40336af16c5da3b0be5b0f19f'}\n\n```{.r .cell-code}\npatent_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/patent.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: type, number,\n#> country, abstract, title, kind, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nassignee_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/assignee.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: number,\n#> country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\npatent_assignee_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/patent_assignee.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nuspc_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/uspc.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")) %>%\n  transform(patent_id = as.character(patent_id))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n:::\n\n\n## Wrangle tables\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-8_71d44598609344177a6b44b0f2317ac5'}\n\n```{.r .cell-code}\nwrangled <- assignee_tb1 %>%\n  left_join(patent_assignee_tb1, by = c(\"id\" = \"assignee_id\")) %>%\n  left_join(patent_tb1, by = c(\"patent_id\" = \"id\")) %>%\n  left_join(uspc_tb1, by = \"patent_id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in left_join(., uspc_tb1, by = \"patent_id\"): Detected an unexpected\n#> many-to-many relationship between `x` and `y`.\n```\n:::\n:::\n\n\n# Question 1\n\n## Get patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-10_3f3a77520a9ca97c2931168a4e3eba19'}\n\n```{.r .cell-code}\npatent_leaders <- sort(table(wrangled$organization), decreasing=T)[1:10] %>%\n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-12_6bdb7ecd59362efaef28e81f94b397eb'}\n\n```{.r .cell-code}\ndata.table(\n  \"Organization\" = patent_leaders$Var1,\n  \"No. of patents (2014)\" = patent_leaders$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"20669\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"16002\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"10276\"},{\"1\":\"Sony Corporation\",\"2\":\"9022\"},{\"1\":\"Microsoft Corporation\",\"2\":\"8113\"},{\"1\":\"Qualcomm Incorporated\",\"2\":\"7814\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"7440\"},{\"1\":\"Google Inc.\",\"2\":\"6815\"},{\"1\":\"Lg Electronics Inc.\",\"2\":\"6292\"},{\"1\":\"Panasonic Corporation\",\"2\":\"6097\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 2\n\n## Get August wrangled table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-14_5d5927891062e338bddd9132ce40234d'}\n\n```{.r .cell-code}\nwrangled_august <- wrangled %>% \n  select(organization, date) %>%\n  filter(date >= \"2014-08-01\" & date <= \"2014-08-31\")\n```\n:::\n\n\n## Get August patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-16_02a147a11ba259251e055a6907b4de7f'}\n\n```{.r .cell-code}\npatent_leaders_august <- sort(table(wrangled_august$organization), decreasing=T)[1:10] %>%\n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display August patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-18_931ab37296d9ce1f2b82d803d59c0f23'}\n\n```{.r .cell-code}\ndata.table(\n  \"Organization\" = patent_leaders_august$Var1,\n  \"No. of patents (August 2014)\" = patent_leaders_august$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (August 2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"1990\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"1361\"},{\"1\":\"Microsoft Corporation\",\"2\":\"876\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"854\"},{\"1\":\"Sony Corporation\",\"2\":\"666\"},{\"1\":\"Qualcomm Incorporated\",\"2\":\"639\"},{\"1\":\"Google Inc.\",\"2\":\"627\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"584\"},{\"1\":\"Apple Inc.\",\"2\":\"568\"},{\"1\":\"Hon Hai Precision Industry Co., Ltd.\",\"2\":\"546\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 3\n\n## Get class wrangled table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-20_f98954dbf197324541a525e966685c61'}\n\n```{.r .cell-code}\nwrangled_class <- wrangled %>%\n  select(organization, mainclass_id) %>%\n  filter(organization %in% patent_leaders$Var1[1:10]) %>% \n  subset(mainclass_id != \"No longer published\")\n```\n:::\n\n\n## Get class patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-22_a460478cdb1c34e65eda01827ed49a24'}\n\n```{.r .cell-code}\nclass_leaders <- sort(table(wrangled_class$mainclass_id), decreasing=T)[1:5] %>% \n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display class patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-24_4e70a80e1f0122515e7e1a526fde3b3f'}\n\n```{.r .cell-code}\ndata.table(\n  \"USPTO tech main class (id since can't find name) for top 10 companies (US since can't find worldwide)\" = class_leaders$Var1,\n  \"No. of patents (2014)\" = class_leaders$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"USPTO tech main class (id since can't find name) for top 10 companies (US since can't find worldwide)\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"257\",\"2\":\"7710\"},{\"1\":\"438\",\"2\":\"3911\"},{\"1\":\"348\",\"2\":\"3848\"},{\"1\":\"709\",\"2\":\"3678\"},{\"1\":\"707\",\"2\":\"3089\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
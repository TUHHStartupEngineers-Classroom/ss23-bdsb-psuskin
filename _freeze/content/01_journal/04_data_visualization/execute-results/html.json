{
  "hash": "56f66b806644d3a06cfe742ad35e6cc2",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Philip Suskin\"\n---\n\n\n# Solution\n\n## Load libraries\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_eae220cd9bb98d3f06152eb22efbd877'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v readr     2.1.4\n#> v forcats   1.0.0     v stringr   1.5.0\n#> v ggplot2   3.4.2     v tibble    3.2.1\n#> v lubridate 1.9.2     v tidyr     1.3.0\n#> v purrr     1.0.1     -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\nlibrary(glue)\n```\n:::\n\n\n## Load covid data\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-4_bf9364f3bd9f01d366bbfdd918d9f4c1'}\n\n```{.r .cell-code}\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 304399 Columns: 67-- Column specification --------------------------------------------------------\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> i Use `spec()` to retrieve the full column specification for this data.\n#> i Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Get worldwide cases and relevant data\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-6_c39c4584a5bd4186d967392677259451'}\n\n```{.r .cell-code}\nworldwide_cases <- covid_data_tbl %>%\n  select(continent, date, total_cases) %>%\n  drop_na(continent) %>%\n  group_by(date, continent) %>%\n  summarise(Total = sum(total_cases, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'date'. You can override using the `.groups`\n#> argument.\n```\n:::\n\n```{.r .cell-code}\ndata_max <- worldwide_cases %>% \n  group_by(continent) %>%\n  filter(Total == max(Total))\n\nlast_date <- as.character(tail(worldwide_cases, n=1)$date)\n```\n:::\n\n\n## Plot worldwide cases over time\n\n::: {.cell hash='04_data_visualization_cache/html/plot_09c7b47988e584a4aad5f4425b80cf52'}\n\n```{.r .cell-code}\nworldwide_cases %>% ggplot(aes(as.Date(date), Total, color = continent)) +\n  geom_line(linewidth = 1) +\n  theme_linedraw() +\n  scale_x_date(date_labels = \"%B %y\", \n               date_breaks = \"1 month\", \n               expand = c(0,NA)) +\n  labs(\n    title = \"COVID-19 confirmed cases worldwide\",\n    subtitle = glue(\"As of {last_date}\")\n  ) +\n  xlab(\"Date\") + ylab(\"Cumulative Cases\") +\n  scale_y_continuous(labels = label_number(suffix = \" M\", scale = 1e-6)) +\n  theme(legend.title = element_blank(), \n        legend.position = \"bottom\", \n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot-1.png){width=1152}\n:::\n:::\n\n\n# Solution challenge 2\n\n## Load world map\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-8_882eebbbb9abd267858e6bb898393b12'}\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\n\nworldwide_mortality <- covid_data_tbl %>%\n  select(location, date, total_deaths, population) %>%\n  drop_na(location) %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location )) %>% \n  distinct() %>%\n  group_by(location) %>% \n  filter(date == max(date)) %>%\n  mutate(death_rate = total_deaths / population) %>%\n  rename(region = location) %>%\n  left_join(world, by = \"region\")\n```\n:::\n\n\n## Plot worldwide mortality\n\n::: {.cell hash='04_data_visualization_cache/html/plot2_2bddcb610894e5ae7a74350e1abbd82d'}\n\n```{.r .cell-code}\nworldwide_mortality %>% ggplot(aes(x = long, y = lat, group = group)) + \n  geom_polygon(aes(fill = death_rate), color = \"white\") +\n  labs(\n    title = \"Mortality Rate Around the World (deaths / population)\",\n    subtitle = \"Around 6.9 Million confirmed COVID-19 deaths worldwide\",\n    fill = \"Mortality Rate\"\n  ) +\n  theme(axis.line = element_blank(), axis.text = element_blank(),\n        axis.ticks = element_blank(), axis.title = element_blank()) +\n  scale_fill_gradientn(na.value=\"gray\",\n                       colors = rev(colorRampPalette(c(\"darkred\", \"lightcoral\"))(5)))\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot2-1.png){width=1152}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}